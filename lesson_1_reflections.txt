How did viewing a diff between two versions of a file help you see the bug that was introduced?
You can easily compare the old with the new to see where things went wrong.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
If a mistake is made you can easily restore to a previous version.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
You have more control in Git; each manual commit will have a clear and logical purpose.  With Google Docs there will be many versions that are saved at different time intervals; these versions are automatic and the program isn't able to attach any meaning to each one.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Some files, such as webpage HTML and CSS files, are related and it makes sense to save these in one commit.

How can you use the commands git log and git diff to view the history of files?
git log shows recent commits and their IDs while git diff will compare two versions of commits.

How might using version control make you more confident to make changes that could break something?
There are backups that can be restored in the event that something breaks.

Now that you have your workspace set up, what do you want to try using Git for?
To store different versions of code.